[1mdiff --git a/nefertari/wrappers.py b/nefertari/wrappers.py[m
[1mindex 661c1ea..dd6bedf 100644[m
[1m--- a/nefertari/wrappers.py[m
[1m+++ b/nefertari/wrappers.py[m
[36m@@ -345,6 +345,20 @@[m [mclass set_total(object):[m
         return result[m
 [m
 [m
[32m+[m[32mclass fix_public_count(object):[m
[32m+[m[32m    def __init__(self, request, public_max):[m
[32m+[m[32m        self.request = request[m
[32m+[m[32m        self.public_max = public_max[m
[32m+[m
[32m+[m[32m    def __call__(self, **kwargs):[m
[32m+[m[32m        count = kwargs['result'][m
[32m+[m[32m        try:[m
[32m+[m[32m            count = min(self.public_max, count)[m
[32m+[m[32m        except (KeyError, TypeError):[m
[32m+[m[32m            pass[m
[32m+[m[32m        return count[m
[32m+[m
[32m+[m
 def set_public_limits(view):[m
     public_max = int(view.request.registry.settings.get([m
         'public_max_limit', 100))[m
[36m@@ -354,8 +368,14 @@[m [mdef set_public_limits(view):[m
         _page = int(view._query_params.get('_page', 0))[m
         _start = int(view._query_params.get('_start', 0))[m
 [m
[31m-        view.add_after_call('index', set_total(view.request, total=public_max),[m
[31m-                            pos=0)[m
[32m+[m[32m        total_wrapper = set_total(view.request, total=public_max)[m
[32m+[m[32m        view.add_after_call('index', total_wrapper, pos=0)[m
[32m+[m
[32m+[m[32m        if '_count' in view._query_params:[m
[32m+[m[32m            count_wrapper = fix_public_count([m
[32m+[m[32m                view.request, public_max=public_max)[m
[32m+[m[32m            view.add_after_call('index', count_wrapper, pos=0)[m
[32m+[m
     except ValueError:[m
         from nefertari.json_httpexceptions import JHTTPBadRequest[m
         raise JHTTPBadRequest("Bad _limit/_page param")[m
[1mdiff --git a/tests/test_wrappers.py b/tests/test_wrappers.py[m
[1mindex 5d4e63d..d277f3e 100644[m
[1m--- a/tests/test_wrappers.py[m
[1m+++ b/tests/test_wrappers.py[m
[36m@@ -487,3 +487,25 @@[m [mclass TestWrappers(unittest.TestCase):[m
         view.add_after_call.side_effect = ValueError[m
         with pytest.raises(JHTTPBadRequest):[m
             wrappers.set_public_limits(view)[m
[32m+[m
[32m+[m[32m    @patch('nefertari.wrappers.set_total')[m
[32m+[m[32m    @patch('nefertari.wrappers.fix_public_count')[m
[32m+[m[32m    def test_set_public_limits_count(self, mock_fix, mock_set):[m
[32m+[m[32m        request = Mock()[m
[32m+[m[32m        request.registry.settings = {'public_max_limit': 123}[m
[32m+[m[32m        view = Mock([m
[32m+[m[32m            request=request,[m
[32m+[m[32m            _query_params={[m
[32m+[m[32m                '_limit': 100, '_page': 1, '_start': 90,[m
[32m+[m[32m                '_count': ''})[m
[32m+[m[32m        wrappers.set_public_limits(view)[m
[32m+[m[32m        mock_fix.assert_called_once_with(request, public_max=123)[m
[32m+[m[32m        view.add_after_call.assert_called_with([m
[32m+[m[32m            'index', mock_fix(), pos=0)[m
[32m+[m[32m        assert view.add_after_call.call_count == 2[m
[32m+[m
[32m+[m[32m    def test_fix_public_count(self):[m
[32m+[m[32m        wrapper = wrappers.fix_public_count(None, public_max=10)[m
[32m+[m[32m        assert wrapper(result=1) == 1[m
[32m+[m[32m        assert wrapper(result=5) == 5[m
[32m+[m[32m        assert wrapper(result=15) == 10[m
